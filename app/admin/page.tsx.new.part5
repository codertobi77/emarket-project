        {/* Dialogues modaux */}
        {/* Dialogue d'ajout d'utilisateur */}
        <Dialog open={isCreateUserDialogOpen} onOpenChange={setIsCreateUserDialogOpen}>
          <DialogContent className="sm:max-w-[425px]">
            <DialogHeader>
              <DialogTitle>Ajouter un utilisateur</DialogTitle>
              <DialogDescription>Créez un nouvel utilisateur sur la plateforme</DialogDescription>
            </DialogHeader>
            <form onSubmit={handleCreateUser} className="space-y-4">
              <div className="space-y-2">
                <Label htmlFor="name">Nom complet</Label>
                <Input 
                  id="name" 
                  value={newUser.name} 
                  onChange={(e) => setNewUser({...newUser, name: e.target.value})}
                  placeholder="Jean Dupont" 
                  required 
                />
              </div>
              <div className="space-y-2">
                <Label htmlFor="email">Email</Label>
                <Input 
                  id="email" 
                  type="email" 
                  value={newUser.email} 
                  onChange={(e) => setNewUser({...newUser, email: e.target.value})}
                  placeholder="jean.dupont@example.com" 
                  required 
                />
              </div>
              <div className="space-y-2">
                <Label htmlFor="password">Mot de passe</Label>
                <Input 
                  id="password" 
                  type="password" 
                  value={newUser.password} 
                  onChange={(e) => setNewUser({...newUser, password: e.target.value})}
                  placeholder="••••••••" 
                  required 
                />
              </div>
              <div className="space-y-2">
                <Label htmlFor="role">Rôle</Label>
                <Select 
                  value={newUser.role} 
                  onValueChange={(value) => setNewUser({...newUser, role: value})}
                >
                  <SelectTrigger>
                    <SelectValue placeholder="Sélectionner un rôle" />
                  </SelectTrigger>
                  <SelectContent>
                    <SelectItem value="ADMIN">Administrateur</SelectItem>
                    <SelectItem value="MANAGER">Manager</SelectItem>
                    <SelectItem value="SELLER">Vendeur</SelectItem>
                    <SelectItem value="USER">Utilisateur</SelectItem>
                  </SelectContent>
                </Select>
              </div>
              <div className="space-y-2">
                <Label htmlFor="image">URL de l'image de profil</Label>
                <Input 
                  id="image" 
                  value={newUser.image} 
                  onChange={(e) => setNewUser({...newUser, image: e.target.value})}
                  placeholder="https://example.com/image.jpg" 
                />
              </div>
              <div className="flex justify-end gap-2 pt-4">
                <Button variant="outline" type="button" onClick={() => setIsCreateUserDialogOpen(false)}>
                  Annuler
                </Button>
                <Button type="submit">Créer</Button>
              </div>
            </form>
          </DialogContent>
        </Dialog>
        
        {/* Dialogue d'ajout de marché */}
        <Dialog open={isCreateMarketDialogOpen} onOpenChange={setIsCreateMarketDialogOpen}>
          <DialogContent className="sm:max-w-[425px]">
            <DialogHeader>
              <DialogTitle>Ajouter un marché</DialogTitle>
              <DialogDescription>Créez un nouveau marché sur la plateforme</DialogDescription>
            </DialogHeader>
            <form onSubmit={handleCreateMarket} className="space-y-4">
              <div className="space-y-2">
                <Label htmlFor="market-name">Nom du marché</Label>
                <Input 
                  id="market-name" 
                  value={newMarket.name} 
                  onChange={(e) => setNewMarket({...newMarket, name: e.target.value})}
                  placeholder="Marché de Paris" 
                  required 
                />
              </div>
              <div className="space-y-2">
                <Label htmlFor="market-location">Localisation</Label>
                <Input 
                  id="market-location" 
                  value={newMarket.location} 
                  onChange={(e) => setNewMarket({...newMarket, location: e.target.value})}
                  placeholder="Paris" 
                  required 
                />
              </div>
              <div className="space-y-2">
                <Label htmlFor="market-description">Description</Label>
                <Textarea 
                  id="market-description" 
                  value={newMarket.description} 
                  onChange={(e) => setNewMarket({...newMarket, description: e.target.value})}
                  placeholder="Description du marché..." 
                  rows={3} 
                />
              </div>
              <div className="space-y-2">
                <Label htmlFor="market-manager">Manager</Label>
                <Select 
                  value={newMarket.managerId} 
                  onValueChange={(value) => setNewMarket({...newMarket, managerId: value})}
                >
                  <SelectTrigger>
                    <SelectValue placeholder="Sélectionner un manager" />
                  </SelectTrigger>
                  <SelectContent>
                    {users
                      .filter(user => user.role === 'MANAGER')
                      .map(manager => (
                        <SelectItem key={manager.id} value={manager.id}>
                          {manager.name}
                        </SelectItem>
                      ))
                    }
                  </SelectContent>
                </Select>
              </div>
              <div className="space-y-2">
                <Label htmlFor="market-image">URL de l'image</Label>
                <Input 
                  id="market-image" 
                  value={newMarket.image} 
                  onChange={(e) => setNewMarket({...newMarket, image: e.target.value})}
                  placeholder="https://example.com/image.jpg" 
                />
              </div>
              <div className="flex justify-end gap-2 pt-4">
                <Button variant="outline" type="button" onClick={() => setIsCreateMarketDialogOpen(false)}>
                  Annuler
                </Button>
                <Button type="submit">Créer</Button>
              </div>
            </form>
          </DialogContent>
        </Dialog>
        
        {/* Dialogue de modification de marché */}
        <Dialog open={isUpdateMarketDialogOpen} onOpenChange={setIsUpdateMarketDialogOpen}>
          <DialogContent className="sm:max-w-[425px]">
            <DialogHeader>
              <DialogTitle>Modifier le marché</DialogTitle>
              <DialogDescription>Modifiez les informations du marché</DialogDescription>
            </DialogHeader>
            <form onSubmit={handleUpdateMarket} className="space-y-4">
              <div className="space-y-2">
                <Label htmlFor="update-market-name">Nom du marché</Label>
                <Input 
                  id="update-market-name" 
                  value={updatedMarket.name} 
                  onChange={(e) => setUpdatedMarket({...updatedMarket, name: e.target.value})}
                  placeholder="Marché de Paris" 
                  required 
                />
              </div>
              <div className="space-y-2">
                <Label htmlFor="update-market-location">Localisation</Label>
                <Input 
                  id="update-market-location" 
                  value={updatedMarket.location} 
                  onChange={(e) => setUpdatedMarket({...updatedMarket, location: e.target.value})}
                  placeholder="Paris" 
                  required 
                />
              </div>
              <div className="space-y-2">
                <Label htmlFor="update-market-description">Description</Label>
                <Textarea 
                  id="update-market-description" 
                  value={updatedMarket.description} 
                  onChange={(e) => setUpdatedMarket({...updatedMarket, description: e.target.value})}
                  placeholder="Description du marché..." 
                  rows={3} 
                />
              </div>
              <div className="space-y-2">
                <Label htmlFor="update-market-manager">Manager</Label>
                <Select 
                  value={updatedMarket.managerId} 
                  onValueChange={(value) => setUpdatedMarket({...updatedMarket, managerId: value})}
                >
                  <SelectTrigger>
                    <SelectValue placeholder="Sélectionner un manager" />
                  </SelectTrigger>
                  <SelectContent>
                    {users
                      .filter(user => user.role === 'MANAGER')
                      .map(manager => (
                        <SelectItem key={manager.id} value={manager.id}>
                          {manager.name}
                        </SelectItem>
                      ))
                    }
                  </SelectContent>
                </Select>
              </div>
              <div className="space-y-2">
                <Label htmlFor="update-market-image">URL de l'image</Label>
                <Input 
                  id="update-market-image" 
                  value={updatedMarket.image} 
                  onChange={(e) => setUpdatedMarket({...updatedMarket, image: e.target.value})}
                  placeholder="https://example.com/image.jpg" 
                />
              </div>
              <div className="flex justify-end gap-2 pt-4">
                <Button variant="outline" type="button" onClick={() => setIsUpdateMarketDialogOpen(false)}>
                  Annuler
                </Button>
                <Button type="submit">Mettre à jour</Button>
              </div>
            </form>
          </DialogContent>
        </Dialog>
        
        {/* Dialogue de suppression de marché */}
        <Dialog open={isDeleteMarketDialogOpen} onOpenChange={setIsDeleteMarketDialogOpen}>
          <DialogContent className="sm:max-w-[425px]">
            <DialogHeader>
              <DialogTitle>Supprimer le marché</DialogTitle>
              <DialogDescription>
                Êtes-vous sûr de vouloir supprimer ce marché ? Cette action est irréversible.
              </DialogDescription>
            </DialogHeader>
            <div className="bg-muted/50 p-4 rounded-md mb-4">
              <p className="font-medium">{deletedMarket?.name}</p>
              <p className="text-sm text-muted-foreground">{deletedMarket?.location}</p>
            </div>
            <div className="flex justify-end gap-2">
              <Button variant="outline" onClick={() => setIsDeleteMarketDialogOpen(false)}>
                Annuler
              </Button>
              <Button variant="destructive" onClick={handleDeleteMarket}>
                Supprimer
              </Button>
            </div>
          </DialogContent>
        </Dialog>
      </div>
    </RoleProtected>
  );
}
